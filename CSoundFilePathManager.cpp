//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : CFilePathManager.cpp
//  @ Date : 2010-06-02
//  @ Author : 
//
//


#include "CSoundFilePathManager.h"

CSoundFilePathManager::CSoundFilePathManager() {

	strcpy( db[0][0], "/mnt/nfs/resource/piano_do.wav");
	strcpy( db[0][1], "/mnt/nfs/resource/piano_re.wav" );
        strcpy( db[0][2], "/mnt/nfs/resource/piano_mi.wav" );
        strcpy( db[0][3], "/mnt/nfs/resource/piano_fa.wav" );
        strcpy( db[0][4], "/mnt/nfs/resource/piano_sol.wav" );
        strcpy( db[0][5], "/mnt/nfs/resource/piano_la.wav" );
        strcpy( db[0][6], "/mnt/nfs/resource/piano_si.wav" );

	strcpy( db[1][0], "/mnt/nfs/resource/elecpiano_do.wav");
	strcpy( db[1][1], "/mnt/nfs/resource/elecpiano_re.wav" );
        strcpy( db[1][2], "/mnt/nfs/resource/elecpiano_mi.wav" );
        strcpy( db[1][3], "/mnt/nfs/resource/elecpiano_fa.wav" );
        strcpy( db[1][4], "/mnt/nfs/resource/elecpiano_sol.wav" );
        strcpy( db[1][5], "/mnt/nfs/resource/elecpiano_la.wav" );
        strcpy( db[1][6], "/mnt/nfs/resource/elecpiano_si.wav" );
	
	strcpy( db[2][0], "/mnt/nfs/resource/Clav_do.wav");
	strcpy( db[2][1], "/mnt/nfs/resource/Clav_re.wav" );
        strcpy( db[2][2], "/mnt/nfs/resource/Clav_mi.wav" );
        strcpy( db[2][3], "/mnt/nfs/resource/Clav_fa.wav" );
        strcpy( db[2][4], "/mnt/nfs/resource/Clav_sol.wav" );
        strcpy( db[2][5], "/mnt/nfs/resource/Clav_la.wav" );
        strcpy( db[2][6], "/mnt/nfs/resource/Clav_si.wav" );
	
        strcpy( db[3][0], "/mnt/nfs/resource/Orchestra_do.wav" );
	strcpy( db[3][1], "/mnt/nfs/resource/Orchestra_re.wav" );
	strcpy( db[3][2], "/mnt/nfs/resource/Orchestra_mi.wav" );
        strcpy( db[3][3], "/mnt/nfs/resource/Orchestra_fa.wav" );
        strcpy( db[3][4], "/mnt/nfs/resource/Orchestra_sol.wav" );
        strcpy( db[3][5], "/mnt/nfs/resource/Orchestra_la.wav" );
        strcpy( db[3][6], "/mnt/nfs/resource/Orchestra_si.wav" );
	
	strcpy( db[4][0], "/mnt/nfs/resource/Eguitar_do.wav" );
	strcpy( db[4][1], "/mnt/nfs/resource/Eguitar_re.wav" );
	strcpy( db[4][2], "/mnt/nfs/resource/Eguitar_mi.wav" );
        strcpy( db[4][3], "/mnt/nfs/resource/Eguitar_fa.wav" );
        strcpy( db[4][4], "/mnt/nfs/resource/Eguitar_sol.wav" );
        strcpy( db[4][5], "/mnt/nfs/resource/Eguitar_la.wav" );
        strcpy( db[4][6], "/mnt/nfs/resource/Eguitar_si.wav" );
	
	strcpy( db[5][0], "/mnt/nfs/resource/MB_do.wav" );
	strcpy( db[5][1], "/mnt/nfs/resource/MB_re.wav" );
	strcpy( db[5][2], "/mnt/nfs/resource/MB_mi.wav" );
        strcpy( db[5][3], "/mnt/nfs/resource/MB_fa.wav" );
        strcpy( db[5][4], "/mnt/nfs/resource/MB_sol.wav" );
        strcpy( db[5][5], "/mnt/nfs/resource/MB_la.wav" );
        strcpy( db[5][6], "/mnt/nfs/resource/MB_si.wav" );
	
	strcpy( db[6][0], "/mnt/nfs/resource/Celesta_do.wav" );
	strcpy( db[6][1], "/mnt/nfs/resource/Celesta_re.wav" );
	strcpy( db[6][2], "/mnt/nfs/resource/Celesta_mi.wav" );
        strcpy( db[6][3], "/mnt/nfs/resource/Celesta_fa.wav" );
        strcpy( db[6][4], "/mnt/nfs/resource/Celesta_sol.wav" );
        strcpy( db[6][5], "/mnt/nfs/resource/Celesta_la.wav" );
        strcpy( db[6][6], "/mnt/nfs/resource/Celesta_si.wav" );
	
	strcpy( db[7][0], "/mnt/nfs/resource/violin_do.wav" );
	strcpy( db[7][1], "/mnt/nfs/resource/violin_re.wav" );
	strcpy( db[7][2], "/mnt/nfs/resource/violin_mi.wav" );
        strcpy( db[7][3], "/mnt/nfs/resource/violin_fa.wav" );
        strcpy( db[7][4], "/mnt/nfs/resource/violin_sol.wav" );
        strcpy( db[7][5], "/mnt/nfs/resource/violin_la.wav" );
        strcpy( db[7][6], "/mnt/nfs/resource/violin_si.wav" );
	

}	

QString CSoundFilePathManager::getFilePath(int type, int id) {


	QString filePath = db[type][id];
	
        return filePath;
}

